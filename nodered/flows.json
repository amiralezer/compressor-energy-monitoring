[
    {
        "id": "01b0505a415fb65e",
        "type": "tab",
        "label": "TRAB_DONE_ABC",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0d5390e74b5644a3",
        "type": "function",
        "z": "01b0505a415fb65e",
        "name": "",
        "func": "var tzoffset = -3 * 60 * 60 * 1000; \nvar date = new Date(Date.now() + tzoffset);\nvar timestamp = date.toISOString().replace(/T/, ' ').replace(/\\..+/, '');\n\nfunction roundNumber (value){\n    return Math.round(value*1000)/1000;\n}\n\nvar voltage = msg.payload[0] / 10;\nvar current = msg.payload[1] / 1000;\nvar power_W = msg.payload[3] / 10;\nvar energy_WH = msg.payload[5];\nvar power_factor_measured = msg.payload[8] / 100;\nvar power_factor_calc = power_W/(current*voltage);\nvar phase_angle_measured = Math.acos(power_factor_measured) * 180/3.141592;\nvar phase_angle_calc = Math.acos(power_factor_calc) * 180 / 3.141592;\n\n//arredondando os valores; \nvoltage = roundNumber(voltage);\ncurrent = roundNumber(current);\npower_W = roundNumber(power_W);\nenergy_WH = roundNumber(energy_WH);\npower_factor_measured = roundNumber(power_factor_measured);\npower_factor_calc = roundNumber(power_factor_calc);\nphase_angle_measured = roundNumber(phase_angle_measured);\nphase_angle_calc = roundNumber(phase_angle_calc); \n\nif(voltage <= 350)\n{\n    var csvString =\n        \"'\" + timestamp + \"',\" +\n        voltage + \",\" +\n        current + \",\" +\n        power_W + \",\" +\n        energy_WH + \",\" +\n        power_factor_measured + \",\" +\n        power_factor_calc + \",\" +\n        phase_angle_measured + \",\" +\n        phase_angle_calc;\n\n    return { payload: csvString };\n}\nelse \n    return {payload: \"Erro\"}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 420,
        "wires": [
            [
                "379da5d6e168aa2e",
                "ba8b51f23b1eb992"
            ]
        ]
    },
    {
        "id": "379da5d6e168aa2e",
        "type": "function",
        "z": "01b0505a415fb65e",
        "name": "Buffer Data",
        "func": "if (!flow.buffer) {\n    flow.buffer = [];\n}\n\nflow.buffer.push(msg.payload);\n\nif (flow.buffer.length >= 40) {\n    var buffer = flow.buffer;\n    flow.buffer = null;\n    return {payload: buffer};\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 280,
        "wires": [
            [
                "4987f4769ea6c02b",
                "ecc72738ae0cd077"
            ]
        ]
    },
    {
        "id": "4987f4769ea6c02b",
        "type": "debug",
        "z": "01b0505a415fb65e",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 220,
        "wires": []
    },
    {
        "id": "ecc72738ae0cd077",
        "type": "function",
        "z": "01b0505a415fb65e",
        "name": "function 2",
        "func": "var query = `INSERT INTO compressor_measurements (moment, voltage, \n            current, power_W, energy_WH, power_factor_measured, \n            power_factor_calc, phase_angle_measured, phase_angle_calc) VALUES`;\nvar variables =`(`;\nfor (let i = 0; i < msg.payload.length; i++) {\n\n    variables += msg.payload[i].split(',')[0] + ',' + \n        msg.payload[i].split(',')[1] + ',' + \n        msg.payload[i].split(',')[2] + ',' + \n        msg.payload[i].split(',')[3] + ',' + \n        msg.payload[i].split(',')[4] + ',' + \n        msg.payload[i].split(',')[5] + ',' + \n        msg.payload[i].split(',')[6] + ',' + \n        msg.payload[i].split(',')[7] + ',' + \n        msg.payload[i].split(',')[8] + ')';\n    if (i < msg.payload.length - 1) {\n        variables +=',('\n    }\n}\nmsg.topic = query + variables\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 280,
        "wires": [
            [
                "6235d6568d1494a9",
                "ebab332800948df4",
                "f0f9e6580f475645"
            ]
        ]
    },
    {
        "id": "6235d6568d1494a9",
        "type": "debug",
        "z": "01b0505a415fb65e",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 220,
        "wires": []
    },
    {
        "id": "406444fbc9fbb8ff",
        "type": "modbus-read",
        "z": "01b0505a415fb65e",
        "name": "PZEM 004t",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "0",
        "quantity": "10",
        "rate": "1000",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "29ef8e3792750985",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 300,
        "y": 400,
        "wires": [
            [
                "0d5390e74b5644a3",
                "34b53b18a472f777"
            ],
            []
        ]
    },
    {
        "id": "34b53b18a472f777",
        "type": "debug",
        "z": "01b0505a415fb65e",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 280,
        "wires": []
    },
    {
        "id": "d048403020eeec71",
        "type": "mqtt out",
        "z": "01b0505a415fb65e",
        "name": "",
        "topic": "pi2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "89f97fc84cc201df",
        "x": 1030,
        "y": 500,
        "wires": []
    },
    {
        "id": "ba8b51f23b1eb992",
        "type": "function",
        "z": "01b0505a415fb65e",
        "name": "condAlarm",
        "func": "var current = msg.payload.split(',')[2]; \nvar moment = msg.payload.split(',')[0];\nvar OpMode;\n\nif (current < 1)\n    OpMode = \"(0) Off\"\nelse if ((current > 10) && (current < 15))\n    OpMode = \"(2) Stand By\"\nelse if ((current>18))\n    OpMode = \"(1) On\"\n\nvar newMsg = {\n    topic: OpMode,\n    payload: \"Mode: \"\n        + OpMode\n        + \"| Hor√°rio: \"\n        + moment\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 500,
        "wires": [
            [
                "d048403020eeec71",
                "8857c9060e6b2d9d"
            ]
        ]
    },
    {
        "id": "94a4c7330a18deb5",
        "type": "e-mail",
        "z": "01b0505a415fb65e",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "raspjuliosub@gmail.com",
        "dname": "",
        "x": 1050,
        "y": 680,
        "wires": []
    },
    {
        "id": "ebab332800948df4",
        "type": "mysql",
        "z": "01b0505a415fb65e",
        "mydb": "1bfd1e707ae383d7",
        "name": "",
        "x": 1110,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "f0f9e6580f475645",
        "type": "mysql",
        "z": "01b0505a415fb65e",
        "mydb": "4245428ae8679049",
        "name": "",
        "x": 1110,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "8857c9060e6b2d9d",
        "type": "debug",
        "z": "01b0505a415fb65e",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 460,
        "wires": []
    },
    {
        "id": "b44818b7b2cb5405",
        "type": "inject",
        "z": "01b0505a415fb65e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 620,
        "wires": [
            [
                "b1899353c93ad58c"
            ]
        ]
    },
    {
        "id": "b1899353c93ad58c",
        "type": "function",
        "z": "01b0505a415fb65e",
        "name": "function 3",
        "func": "var query = `SELECT moment FROM compressor_measurements \nORDER BY moment DESC LIMIT 1`;\n\nmsg.topic = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 620,
        "wires": [
            [
                "f856fbc24803cc55"
            ]
        ]
    },
    {
        "id": "f856fbc24803cc55",
        "type": "mysql",
        "z": "01b0505a415fb65e",
        "mydb": "4245428ae8679049",
        "name": "",
        "x": 610,
        "y": 620,
        "wires": [
            [
                "9adc39947ce14907",
                "0c9f14f17847c8c3"
            ]
        ]
    },
    {
        "id": "0c9f14f17847c8c3",
        "type": "function",
        "z": "01b0505a415fb65e",
        "name": "condEmail",
        "func": "var date = Date.now();\nvar dbDate = Date.parse(msg.payload[0]['moment']);\nconst diffTime = Math.abs(date - dbDate);\nconst hours = diffTime/84600000/24;\nif(hours > 3.0)\n{\n    let alarmMsg = \"Compressor est√° sem energia\"\n    var newMsg = {\n        topic: alarmMsg,\n        payload: \"Mode: \"\n            + \"(3) Out_of_Energy\"\n            + \"| Hor√°rio: \"\n            + date\n    }\n    return newMsg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 620,
        "wires": [
            [
                "ea0c5a0e654d1007",
                "d048403020eeec71"
            ]
        ]
    },
    {
        "id": "9adc39947ce14907",
        "type": "debug",
        "z": "01b0505a415fb65e",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 680,
        "wires": []
    },
    {
        "id": "ea0c5a0e654d1007",
        "type": "debug",
        "z": "01b0505a415fb65e",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 620,
        "wires": []
    },
    {
        "id": "29ef8e3792750985",
        "type": "modbus-client",
        "name": "",
        "clienttype": "serial",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "89f97fc84cc201df",
        "type": "mqtt-broker",
        "name": "mosquittoRasp",
        "broker": "10.9.0.35",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "1bfd1e707ae383d7",
        "type": "MySQLdatabase",
        "name": "Local",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "pi2",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "4245428ae8679049",
        "type": "MySQLdatabase",
        "name": "Cloud",
        "host": "utfpr-pi2-compressor-monitor.mysql.database.azure.com",
        "port": "3306",
        "db": "pi2",
        "tz": "",
        "charset": "UTF8"
    }
]